===================================
test cases for matrix_divided
===================================

import the function from module

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Testing matrix with regular number
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

Testing when values in matrix is not integer
>>> matrix_divided([[1, "a", 8], [2, 3, 6]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing for missing two arguments
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Testing matrix as list of numbers and div as string
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "b")
Traceback (most recent call last):
...
TypeError: div must be a number


Tesing matrix as list of list of integers and div as zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Testing matrix as list of list of integer but not rectangular
>>> matrix_divided([[1, 2, 3], [4, 5]], 4)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
