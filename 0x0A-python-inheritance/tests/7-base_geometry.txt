The ``7-base_geometry`` module
=======================

using ``BaseGeometry`` Class with ``integer_validator()`` public method
-----------------------

Testing ``integer_validator``

import BaseGeometry Class
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

test if my_int as 12 and width as 89 valid
>>> bg = BaseGeometry()

>>> bg.integer_validator(45,54)

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

Testing for name
>>> bg = BaseGeometry()
>>> try:
...	bg.integer_validator("name", "Sal")
... except Exception as e:
...	print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

Testing for negative number
>>> bg.integer_validator("distance" -3)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

Testing for list type
>>> bg.integer_validator("name", [["hello"]])
Traceback (most recent call last):
...
TypeError: name must be an integer
